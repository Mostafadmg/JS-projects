:root {
    --main-white: #f0f0f0;
    --main-red: #be3144;
    --main-blue: #45567d;
    --main-gray: #303841;
}

*::after,
*::before {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}
html {
    font-size: 10px;
}

body {
    font-family: "Poppins", sans-serif;
    font-size: 1.8rem;
    font-weight: 400;
    line-height: 1.4;
    color: #eee;
}
.nav {
    display: flex;
    justify-content: flex-end;
    flex-direction: row;
    align-items: center;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    background-color: var(--main-red);
    z-index: 10;
}

#navbar {
    box-shadow: 0 2px 1px rgba(0, 0, 0, 0.4);
}

.nav-list {
    list-style: none;
    display: flex;
    margin-right: 2rem;
    font-size: 3rem;
}

.nav-list li {
    opacity: 0; /* Initially hidden */
    animation: bounceIn 1.25s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
    animation-delay: calc(0.2s * var(--i)); /* Staggered animation */
}

.nav-list a:hover {
    transform: scale(1.2);
    transition: transform 0.2s ease-out;
}

.nav-list a {
    display: block;
    font-size: 3.5rem;
    padding: 2rem;
    text-decoration: none;
    color: var(--main-white);
}

.welcome-section {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100vh;
    background-color: black; /* this is to use as fallback if background image does not work in certain browsers */
    background-image: linear-gradient(62deg, #3a3d40 0%, #181719 100%);
}

#h1-myname {
    font-size: 7rem;
    transition: all 0.2s;
    animation-name: moveinright;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

h1 {
    font-family: "Raleway", sans-serif;
    font-weight: 700;
    text-align: center;
}
h2 {
    font-family: "Raleway", sans-serif;
    font-weight: 700;
    text-align: center;
    font-size: 4rem;
}

.welcome-section > p {
    color: var(--main-red);
    font-style: italic;
    font-size: 3rem;
    letter-spacing: 0.2rem;
    font-weight: 100;
    animation-name: moveinleft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

.project-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    grid-gap: 4rem;
    width: 100%;
    max-width: 1280px;
    margin: 0 auto;
    margin-bottom: 6rem;
    transform: all 0.3sec;
}
.project-image {
    height: calc(100% - 6.8rem);
    width: 100%;
    object-fit: cover;
}

.project-title {
    font-size: 2rem;
}

.project-section {
    background-color: var(--main-blue);
    text-align: center;
    padding: 10rem 2rem;
}
.projects-section-header {
    max-width: 60rem;
    margin: 0 auto 6rem auto;
    border-bottom: 0.2rem solid #eee;
}

a {
    text-decoration: none;
    color: #eee;
    padding-bottom: 1rem;
}

.project {
    background: #303841;
    box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
    border-radius: 2px;
}
.btn-show-all {
    background-color: #303841;
    font-size: 2rem;
    transition: background 0.3s ease-out;
    display: inline-flex; /* Ensures proper alignment for button content */
    align-items: center;
}

/*
The below .btn-show-all:hover affects any element with btn-show-all
element that is hovered.

*/
.btn-show-all:hover {
    background: var(--main-red);
}

/*
.btn-show-all > i affects the DIRECT childrens of .btn show all that are <i>

it is important to give transform and transition to the parent element

instead of the ::hover state, this is so the browser knows how to do the animation.

if we did not specify the browser would not have a starting reference point to work with.

*/

.btn-show-all > i {
    margin-left: 10px; /* Adds spacing between text and arrow */
    transform: translateX(0); /* Initial position */
    transition: transform 0.3s ease-out; /* Smooth arrow movement */
}

/*
.btn-show-all:hover > i ==> this targets the <i> icons indide the button when the
btn-show-all is hovered

so we gave this a value of translateX(2px) so the browser knows it needs to move
right with 2px


because we gave its parent selection the .btn-show-all transform tranlate(0).

now it knows the starting point is a 0 and when hovered it is moved to right by 2px.

*/

.fa,
.fab,
.fal,
.far,
.fas {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    display: inline-block;
    font-style: normal;
    font-variant: normal;
    text-rendering: auto;
    line-height: 1;
}

.btn-show-all:hover > i {
    transform: translateX(2px); /* Moves arrow 2px to the right on hover */
}

.btn {
    display: inline-block;
    padding: 1rem 2rem;
    border-radius: 3px;
    text-align: center;
}

/* Remove unused or redundant styles */

/*
 80vh why choose this in the below contact-section ??

 Makes the contact section proportionally fill most of the screen height,
leaving space for other sections (like a footer or header).

without this the height of the section would be based on its content ==> quite narrow.
*/

/*
why use text align in a flexbox? should it not algin the text too?

no it will only align block element, but not the text inside them which are inline elements.
*/
.contact-section {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    width: 100%;
    height: 80vh;
    padding: 0 2rem;
    background-color: #303841;
}

.contact-details {
    transition: transform 0.3s ease-out;
    font-size: 2.4rem;
}

.contact-details i {
    font-size: 2.4rem;
    text-shadow: 2px 2px 1px #1f1f1f;
    transition: transform 0.3s ease-out;
    display: inline-block;
    margin-right: 0.5rem;
}

.contact-details:hover {
    transform: translateY(8px);
}

.contact-section-header > h2 {
    font-size: 6rem;
}

.contact-section-header > p {
    font-style: italic;
}

footer {
    background: #303841;
    margin: 0 auto;
    font-weight: 300;
    display: flex;
    flex-direction: row;
    align-content: center;
    justify-content: space-evenly;
    border-top: 4px solid var(--main-red);

    padding: 2rem;
}

footer p {
    margin: 0 auto;
    padding: 1rem 0;
}

/*  */

@keyframes moveinleft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    80% {
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveinright {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes bounceIn {
    0% {
        transform: translateY(-100px);
        opacity: 0;
    }
    20% {
        transform: translateY(0);
    }
    40% {
        transform: translateY(-50px);
    }
    60% {
        transform: translateY(-0);
    }
    80% {
        transform: translateY(-25px);
    }
    100% {
        transform: translateY(-0);
        opacity: 1;
    }
}
